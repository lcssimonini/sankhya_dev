package br.com.simonini.managedbeans;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.PostConstruct;
import javax.ejb.EJB;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ViewScoped;

import br.com.simonini.entities.Cliente;
import br.com.simonini.session.ClienteBean;
import br.com.simonini.utils.ScreenUtils;

@ManagedBean(name = "clienteMB")
@ViewScoped
public class ClienteMB implements Serializable {

	private static final long serialVersionUID = -8498185949884249551L;
	
	@EJB
	private ClienteBean clienteBean;
	
	private Long idSelecionado;
	
	private List<Cliente> clientes;
	
	private Cliente cliente;
	
	public String greeting;
	
	private Map<String, Integer> tipo;
	private Map<String, Integer> porte;
	
	@PostConstruct
	public void init() {
		clientes = clienteBean.createClientes();
		
		tipo  = new HashMap<String, Integer>();
	    tipo.put("Física", new Integer(1));
	    tipo.put("Jurídica", new Integer(2));
	        
	    porte  = new HashMap<String, Integer>();
	    porte.put("Micro", new Integer(1));
	    porte.put("Pequeno", new Integer(2));
	    porte.put("Medio", new Integer(3));
	    porte.put("Grande", new Integer(4));
	}
	
	public ClienteMB(){
	}
	
	public Map<String, Integer> getTipo() {
		return tipo;
	}

	public void setTipo(Map<String, Integer> tipo) {
		this.tipo = tipo;
	}

	public Map<String, Integer> getPorte() {
		return porte;
	}

	public void setPorte(Map<String, Integer> porte) {
		this.porte = porte;
	}
	
	public void setIdSelecionado(Long idSelecionado) {
		this.idSelecionado = idSelecionado;
	}
	
	public Long getIdSelecionado() {
		return idSelecionado;
	}
	
	public Cliente getCliente() {
		return cliente;
	}
	
	public void incluir(){
		cliente = new Cliente();
	}
	
	public void editar() {
		if (idSelecionado == null) {
			return;
		}
		cliente = clienteBean.findById(idSelecionado);
	}
	
	public List<Cliente> getClientes() {
		if (clientes == null) {
			clientes = clienteBean.findAll();
		}
		return clientes;
	}

	
	public String salvar() {
		try {
			clienteBean.save(cliente);
		} catch(Exception ex) {
			ScreenUtils.addMessage("Não foi possível salvar o cliente", ex.getMessage());
			return "";
		}
		return "listaClientes";
	}
	
	public String remover() {
		try {
			clienteBean.delete(cliente);
		} catch(Exception ex) {
			ScreenUtils.addMessage("Não foi possível remover o contato", ex.getMessage());
			return "";
		}
		return "listaClientes";
	}
	
	public String getGreeting(){
		this.greeting = clienteBean.getGreeting();
		return greeting;
	}
}
